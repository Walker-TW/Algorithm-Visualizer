// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> renders 1`] = `
<Navbar
  bg="dark"
  collapseOnSelect={true}
  expand="lg"
  variant="dark"
>
  <NavbarBrand
    href="https://github.com/Walker-TW/Algorithm-Visualizer"
  >
    Algo-Visualiser
  </NavbarBrand>
  <NavbarToggle
    aria-controls="responsive-navbar-nav"
    label="Toggle navigation"
  />
  <NavbarCollapse
    id="responsive-navbar-nav"
  >
    <Container
      fluid={true}
    >
      <Col>
        <Nav
          className="mr-auto"
          fill={false}
          justify={false}
        >
          <NavDropdown
            title="Mazes"
          >
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
            >
              1
            </DropdownItem>
            <DropdownDivider
              role="separator"
            />
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
            >
              2
            </DropdownItem>
            <DropdownDivider
              role="separator"
            />
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
            >
              3?
            </DropdownItem>
            <DropdownDivider
              role="separator"
            />
          </NavDropdown>
          <NavDropdown
            id="collasible-nav-dropdown"
            title="Algorithms"
          >
            <DropdownItem
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="set-dijkstra"
              onClick={[Function]}
            >
              Dijkstra
            </DropdownItem>
            <DropdownItem
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="set-astar-euclidean"
              onClick={[Function]}
            >
              A* (Euclidean Distance)
            </DropdownItem>
            <DropdownItem
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="set-astar-manhatten"
              onClick={[Function]}
            >
              A* (Manhatten Distance)
            </DropdownItem>
            <DropdownItem
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="set-depth-first-search"
              onClick={[Function]}
            >
              Depth First Search
            </DropdownItem>
            <DropdownItem
              active={false}
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="set-breadth-first-search"
              onClick={[Function]}
            >
              Breadth First Search
            </DropdownItem>
          </NavDropdown>
        </Nav>
      </Col>
      <Col>
        <Nav
          fill={false}
          justify={false}
        >
          <Button
            active={false}
            disabled={true}
            id="run-btn"
            onClick={[Function]}
            style={
              Object {
                "border": "2px solid chartreuse",
                "color": "chartreuse",
              }
            }
            type="button"
            variant="dark"
          >
            Please Select An Algorithm
          </Button>
          <SplitButton
            id="reset-btn"
            onClick={[MockFunction]}
            style={
              Object {
                "border": "2px solid red",
                "color": "red",
              }
            }
            title="Reset Visited"
            toggleLabel="Toggle dropdown"
            type="button"
            variant="dark"
          >
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="start-reset"
              onClick={[Function]}
              variant="dark"
            >
              Reset Start
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="fence-reset-btn"
              onClick={[MockFunction]}
              variant="dark"
            >
              Reset Fences
            </DropdownItem>
            <DropdownItem
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "SafeAnchor",
                  "render": [Function],
                }
              }
              disabled={false}
              id="end-reset"
              onClick={[Function]}
              variant="dark"
            >
              Reset End
            </DropdownItem>
          </SplitButton>
        </Nav>
      </Col>
      <Col>
        <Nav
          fill={false}
          justify={false}
          navbar="true"
        >
          <Container
            fluid={false}
          >
            <Form
              inline={true}
            >
              <FormCheck
                disabled={false}
                id="fence-check"
                inline={false}
                isInvalid={false}
                isValid={false}
                label="Fence mode"
                name="fences"
                onChange={[MockFunction]}
                style={
                  Object {
                    "color": "white",
                  }
                }
                title=""
                type="switch"
              />
            </Form>
          </Container>
          <DropdownButton
            size="sm"
            title="Settings"
            variant="dark"
          >
            <Container
              fluid={false}
              variant="dark"
            >
              <Row
                noGutters={false}
              >
                <Form
                  inline={true}
                  variant="dark"
                >
                  <Col>
                    Grid Size
                    <FormControl
                      onChange={[Function]}
                      placeholder="Width (Currently 30)"
                      size="sm"
                      type="text"
                    />
                    <FormControl
                      custom={true}
                      max={34.13333333333333}
                      min="1"
                      onChange={[Function]}
                      size="sm"
                      type="range"
                      value={30}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormControl
                      className="Row-Input"
                      onChange={[Function]}
                      placeholder="Height (Currently 15)"
                      size="sm"
                      type="text"
                    />
                    <FormControl
                      custom={true}
                      max="50"
                      min="1"
                      onChange={[Function]}
                      type="range"
                      value={15}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormLabel
                      column={false}
                      srOnly={false}
                    >
                      Draw Square
                    </FormLabel>
                    <FormControl
                      custom={true}
                      max="50"
                      min="1"
                      onChange={[Function]}
                      size="sm"
                      type="range"
                      value={30}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormLabel
                      column={false}
                      srOnly={false}
                    >
                      Animation Speed
                    </FormLabel>
                    <FormControl
                      custom={true}
                      max="5"
                      min="1"
                      onChange={[Function]}
                      type="range"
                    />
                  </Col>
                </Form>
              </Row>
            </Container>
          </DropdownButton>
          <DropdownButton
            id="contact-info"
            size="sm"
            title="Contact The Team"
          >
            <Container
              fluid={false}
            >
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  href="https://github.com/basselalsayed"
                  id="basselGit"
                >
                  Bassel's Git
                </DropdownItem>
              </Row>
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  href="https://www.linkedin.com/in/bsas/"
                  id="basselLink"
                >
                  Bassel's LinkedIn
                </DropdownItem>
              </Row>
            </Container>
            <Container
              fluid={false}
            >
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  href="https://github.com/Walker-TW"
                  id="tomGit"
                >
                  Tom's Git
                </DropdownItem>
              </Row>
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  href="https://www.linkedin.com/in/thomas-w-walker/"
                  id="tomLink"
                >
                  Tom's LinkedIn
                </DropdownItem>
              </Row>
            </Container>
          </DropdownButton>
        </Nav>
      </Col>
    </Container>
  </NavbarCollapse>
</Navbar>
`;
