// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MobileHeader /> renders 1`] = `
<Navbar
  bg="dark"
  collapseOnSelect={true}
  expand="lg"
  expanded={false}
  variant="dark"
>
  <NavbarBrand
    href="https://github.com/Walker-TW/Algorithm-Visualizer"
  >
    Algo-Visualiser
  </NavbarBrand>
  <NavbarToggle
    aria-controls="responsive-navbar-nav"
    label="Toggle navigation"
    onClick={[Function]}
  />
  <NavbarCollapse
    id="responsive-navbar-nav"
  >
    <Container
      fluid={true}
    >
      <Col
        md={
          Object {
            "span": 2,
          }
        }
      >
        <Container
          fluid={false}
        >
          <Form
            inline={true}
          >
            <FormCheck
              disabled={false}
              id="fence-check"
              inline={false}
              isInvalid={false}
              isValid={false}
              label="Fence mode"
              name="fences"
              onChange={[MockFunction]}
              style={
                Object {
                  "color": "white",
                }
              }
              title=""
              type="switch"
            />
          </Form>
        </Container>
        <Nav
          className="mr-auto"
          fill={false}
          justify={false}
        />
      </Col>
      <Col
        md={
          Object {
            "span": 4,
          }
        }
      >
        <Nav
          fill={false}
          justify={false}
        >
          <Button
            active={false}
            disabled={false}
            id="maze-btn"
            onClick={[Function]}
            style={
              Object {
                "border": "2px solid cyan",
                "color": "cyan",
              }
            }
            type="button"
            variant="dark"
          >
            How To Use
          </Button>
          <Bootstrap(Modal)
            onHide={[Function]}
          >
            <ModalHeader
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle>
                How To Use
              </ModalTitle>
            </ModalHeader>
            <ModalBody>
              <Container
                fluid={false}
              >
                <Row
                  noGutters={false}
                >
                  1. Place a start and end point by clicking on the grid! (You can remove them by clicking on them again)
                </Row>
                <Row
                  noGutters={false}
                >
                   
                  2. Then place fences by checking "Fence Mode" and clicking on the grid.
                   
                </Row>
                <Row
                  noGutters={false}
                >
                  3. Choose an algorithm via the "Algorithms" dropdown.
                   
                </Row>
                <Row
                  noGutters={false}
                >
                  4. Run it via pressing the green "Run Algorithm" button.
                   
                </Row>
                <Row
                  noGutters={false}
                >
                  5. Enjoy!
                </Row>
              </Container>
            </ModalBody>
            <ModalFooter>
              <Button
                active={false}
                disabled={false}
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                Close
              </Button>
            </ModalFooter>
          </Bootstrap(Modal)>
          <Dropdown
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "role": "group",
                  "toggle": false,
                  "vertical": false,
                },
                "displayName": "ButtonGroup",
                "render": [Function],
              }
            }
            drop="down"
            navbar={false}
          >
            <Button
              active={false}
              disabled={true}
              id="run-btn"
              onClick={[Function]}
              style={
                Object {
                  "border": "2px solid chartreuse",
                  "color": "chartreuse",
                }
              }
              type="button"
              variant="dark"
            >
              Please Select Algorithm
            </Button>
            <DropdownToggle
              id="dropdown-custom-2"
              split={true}
              style={
                Object {
                  "border": "2px solid chartreuse",
                  "color": "chartreuse",
                }
              }
              variant="dark"
            />
            <DropdownMenu
              alignRight={false}
              flip={true}
            >
              <OverlayTrigger
                defaultShow={false}
                overlay={
                  <ForwardRef
                    id="dijkstra-popover"
                    placement="right"
                  >
                    <ForwardRef
                      as="h2"
                    >
                      Dijkstra
                    </ForwardRef>
                    <ForwardRef>
                      <p>
                        <strong>
                          Weighted
                        </strong>
                      </p>
                      <p>
                        Running Time:
                      </p>
                      <p>
                        O( | E | log | V | )
                      </p>
                      <p>
                        Always finds the shortest path.
                      </p>
                      <p>
                        Uses distance of nodes to choose the direction to travel.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                }
                placement="bottom"
                trigger="focus"
              >
                <DropdownItem
                  active={false}
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="set-dijkstra"
                  onClick={[Function]}
                >
                  Dijkstra
                </DropdownItem>
              </OverlayTrigger>
              <OverlayTrigger
                defaultShow={false}
                overlay={
                  <ForwardRef
                    id="astar-e-popover"
                    placement="right"
                  >
                    <ForwardRef
                      as="h3"
                    >
                      A* (Euclidean)
                    </ForwardRef>
                    <ForwardRef>
                      <p>
                        <strong>
                          Weighted
                        </strong>
                      </p>
                      <p>
                        Running Time:
                      </p>
                      <p>
                        O( log ( h* )( x ) )
                      </p>
                      <p>
                        Will not always find the shortest path.
                      </p>
                      <p>
                        Uses as the crow flies heuristic to decide direction of search.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                }
                placement="bottom"
                trigger="focus"
              >
                <DropdownItem
                  active={false}
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="set-astar-euclidean"
                  onClick={[Function]}
                >
                  A* (Euclidean Distance)
                </DropdownItem>
              </OverlayTrigger>
              <OverlayTrigger
                defaultShow={false}
                overlay={
                  <ForwardRef
                    id="astar-m-popover"
                    placement="right"
                  >
                    <ForwardRef
                      as="h3"
                    >
                      A* (Manhatten)
                    </ForwardRef>
                    <ForwardRef>
                      <p>
                        <strong>
                          Weighted
                        </strong>
                      </p>
                      <p>
                        Running Time:
                      </p>
                      <p>
                        O( log ( h* )( x ) )
                      </p>
                      <p>
                        Will find the shortest path
                      </p>
                      <p>
                        Uses the “taxi cab” heuristic for non diagonal graphs.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                }
                placement="bottom"
                trigger="focus"
              >
                <DropdownItem
                  active={false}
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="set-astar-manhatten"
                  onClick={[Function]}
                >
                  A* (Manhatten Distance)
                </DropdownItem>
              </OverlayTrigger>
              <OverlayTrigger
                defaultShow={false}
                overlay={
                  <ForwardRef
                    id="dfs-popover"
                    placement="right"
                  >
                    <ForwardRef
                      as="h3"
                    >
                      Depth First Search
                    </ForwardRef>
                    <ForwardRef>
                      <p>
                        <strong>
                          Not Weighted
                        </strong>
                      </p>
                      <p>
                        Running Time:
                      </p>
                      <p>
                        O( | V | + | E | )
                      </p>
                      <p>
                        Will not find the shortest path
                      </p>
                      <p>
                        Searches every branch of a graph
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                }
                placement="bottom"
                trigger="focus"
              >
                <DropdownItem
                  active={false}
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="set-depth-first-search"
                  onClick={[Function]}
                >
                  Depth First Search
                </DropdownItem>
              </OverlayTrigger>
              <OverlayTrigger
                defaultShow={false}
                overlay={
                  <ForwardRef
                    id="bfs-popover"
                    placement="right"
                  >
                    <ForwardRef
                      as="h3"
                    >
                      Breadth First Search
                    </ForwardRef>
                    <ForwardRef>
                      <p>
                        <strong>
                          Not Weighted
                        </strong>
                      </p>
                      <p>
                        Running Time:
                      </p>
                      <p>
                        O( | V | + | E | )
                      </p>
                      <p>
                        Will find the shortest path
                      </p>
                      <p>
                        Will search paths only after its current path has been fully explored.
                      </p>
                    </ForwardRef>
                  </ForwardRef>
                }
                placement="bottom"
                trigger="focus"
              >
                <DropdownItem
                  active={false}
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="set-breadth-first-search"
                  onClick={[Function]}
                >
                  Breadth First Search
                </DropdownItem>
              </OverlayTrigger>
            </DropdownMenu>
          </Dropdown>
          <Dropdown
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "role": "group",
                  "toggle": false,
                  "vertical": false,
                },
                "displayName": "ButtonGroup",
                "render": [Function],
              }
            }
            navbar={false}
          >
            <Button
              active={false}
              disabled={false}
              id="reset-btn"
              onClick={[MockFunction]}
              style={
                Object {
                  "border": "2px solid red",
                  "color": "red",
                }
              }
              type="button"
              variant="dark"
            >
              Reset Fences
            </Button>
            <DropdownToggle
              id="dropdown-custom-2"
              split={true}
              style={
                Object {
                  "border": "2px solid red",
                  "color": "red",
                }
              }
              variant="dark"
            />
            <DropdownMenu
              alignRight={false}
              flip={true}
            >
              <DropdownItem
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "SafeAnchor",
                    "render": [Function],
                  }
                }
                disabled={false}
                id="fence-reset-btn"
                onClick={[MockFunction]}
                variant="dark"
              >
                Reset Fences
              </DropdownItem>
            </DropdownMenu>
          </Dropdown>
        </Nav>
      </Col>
      <Col
        md={
          Object {
            "span": 4,
          }
        }
      >
        <Nav
          fill={false}
          justify={false}
          navbar="true"
        >
          <DropdownButton
            size="sm"
            title="Settings"
            variant="dark"
          >
            <Container
              fluid={false}
              variant="dark"
            >
              <Row
                noGutters={false}
              >
                <Form
                  inline={true}
                  variant="dark"
                >
                  <Col>
                    Grid Size
                    <FormControl
                      onChange={[Function]}
                      placeholder="Width (Currently 30)"
                      size="sm"
                      type="text"
                    />
                    <FormControl
                      custom={true}
                      max={34.13333333333333}
                      min="1"
                      onChange={[Function]}
                      size="sm"
                      type="range"
                      value={30}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormControl
                      className="Row-Input"
                      onChange={[Function]}
                      placeholder="Height (Currently 15)"
                      size="sm"
                      type="text"
                    />
                    <FormControl
                      custom={true}
                      max={25.6}
                      min="1"
                      onChange={[Function]}
                      type="range"
                      value={15}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormLabel
                      column={false}
                      srOnly={false}
                    >
                      Draw Square
                    </FormLabel>
                    <FormControl
                      custom={true}
                      max="50"
                      min="1"
                      onChange={[Function]}
                      size="sm"
                      type="range"
                      value={30}
                    />
                    <DropdownDivider
                      role="separator"
                    />
                    <FormLabel
                      column={false}
                      srOnly={false}
                    >
                      Animation Speed
                    </FormLabel>
                    <FormControl
                      custom={true}
                      max="5"
                      min="1"
                      onChange={[Function]}
                      type="range"
                      value="5"
                    />
                  </Col>
                </Form>
              </Row>
            </Container>
          </DropdownButton>
          <DropdownButton
            id="contact-info"
            size="sm"
            title="Contact The Team"
          >
            <Container
              fluid={false}
            >
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="bassel"
                >
                  Bassel
                </DropdownItem>
                <a
                  className="image-link"
                  href="https://github.com/basselalsayed"
                >
                  <Image
                    alt="Github"
                    className="github-img"
                    fluid={true}
                    rounded={false}
                    roundedCircle={false}
                    src="/images/github.png"
                    thumbnail={false}
                  />
                </a>
                <a
                  className="image-link"
                  href="https://www.linkedin.com/in/bsas/"
                >
                  <Image
                    alt="LinkedIn"
                    className="linkedin-img"
                    fluid={true}
                    rounded={false}
                    roundedCircle={false}
                    src="/images/linkedin.png"
                    thumbnail={false}
                  />
                </a>
              </Row>
              <Row
                noGutters={false}
              >
                <DropdownItem
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "SafeAnchor",
                      "render": [Function],
                    }
                  }
                  disabled={false}
                  id="tom"
                >
                  Tom
                </DropdownItem>
                <a
                  className="image-link"
                  href="https://github.com/Walker-TW"
                >
                  <Image
                    alt="Github"
                    className="github-img"
                    fluid={true}
                    rounded={false}
                    roundedCircle={false}
                    src="/images/github.png"
                    thumbnail={false}
                  />
                </a>
                <a
                  className="image-link"
                  href="https://www.linkedin.com/in/thomas-w-walker"
                >
                  <Image
                    alt="LinkedIn"
                    className="linkedin-img"
                    fluid={true}
                    rounded={false}
                    roundedCircle={false}
                    src="/images/linkedin.png"
                    thumbnail={false}
                  />
                </a>
              </Row>
            </Container>
          </DropdownButton>
        </Nav>
      </Col>
    </Container>
  </NavbarCollapse>
</Navbar>
`;
